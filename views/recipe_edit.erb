<h2>レシピ編集</h2>
<div class="recipe-form form-group">
  <form action="/recipes/<%= @recipe['id'] %>" method="post" enctype="multipart/form-data" id="r_form">
    <input type="hidden" name="csrf_token" value="<%= @csrf_token %>">
    <input type="hidden" name="_method" value="PUT">
    <div class="f-container">
      <div>
        <div>          
          <label for="name">料理名: </label>
          <input type="text" name="name" id="name" value="<%= h(@recipe['name']) %>" style="width: 400px;" required>
        </div>  
        <div>
          <label for="price">値段: </label>
          <input type="number" name="price" id="price" value="<%= h(@recipe['price']) %>" style="width: 200px;" required><small>円</small>
        </div>
        <div>
          <label for="img">画像: </label>
          <input type="hidden" name="img" value="<%= h(@recipe['image']) %>">
          <input type="file" name="update_img">
        </div>
      </div>
      <div>
        <div>
          <label for="description">作り方: </label>
          <textarea name="description" id="description"><%= h(@recipe['description']) %></textarea>
        </div>
      </div>
    </div>
    <div class="form-title">使用食材</div> 
    <div id="append" class="mt-2">
      <div id="i_form" style="display: none;">
        <div class="f-container">
          <div>
            <label class="l_trader">仕入れ先: </label>
            <select class="s_trader" onChange="getName(this.value, this.id)" style="width: 200px;">
              <option value="" selected disabled>選択してください</option>
              <% @s_traders.each do |key| %>
                <option value="<%= key['trader'] %>"><%= key['trader'] %></option>
              <% end %>
            </select>
          </div>
          <div>
            <label class="l_name">食材名: </label>
            <select class="s_name" disabled onChange="getUnit(this.value, this.id)" style="width: 200px;"></select>
          </div>
          <div>
            <label class="l_amount">使用量: </label>
            <input type="number" class="t_amount" style="width: 130px;" onChange="getCost(this.id)" step="0.1">      
          </div>
          <div class="mt-3"><span class="sp_unit">使用単位</span></div>
          <div>
            <label>原価: </label>
            <input type="text" class="t_cost" style="width: 130px;" readonly>
            <span>円</span>
          </div>
          <input type="button" value="−" class="r_btn btn btn-red" style="width: 30px;" onClick="removeInput(this.id)">
        </div>
      </div>
      <% @ingredients.each_with_index do |ingredient, i| %>
        <div id="i_form<%= i %>">
          <div class="f-container">
            <div>
              <input type="hidden" name="ingredient_meisai_id_<%= i %>" value="<%= h(ingredient['meisai_id']) %>">
              <label for="ingredient_trader_<%= i %>" class="l_trader">仕入れ先: </label>
              <select id="ingredient_trader_<%= i %>" class="s_trader" onChange="return getName(this.value, this.id)" style="width: 200px;">
                <option value="" selected disabled>選択してください</option>
                <% @s_traders.each do |key| %>
                  <% if key['trader'] == ingredient['trader'] %>
                    <option value="<%= key['trader'] %>" selected><%= key['trader'] %></option>
                  <% else %>
                    <option value="<%= key['trader'] %>"><%= key['trader'] %></option>
                  <% end %>
                <% end %>
              </select>
            </div>
            <div>
              <label for="ingredient_name_<%= i %>" class="l_name">食材名: </label>
              <select name="ingredient_id_<%= i %>" id="ingredient_name_<%= i %>" class="s_name" onChange="getUnit(this.value, this.id)" style="width: 200px;">
              <% @ingredient_name[i].each do |key| %>
                <% if key['name'] == ingredient['name'] %>
                  <option value="<%= key['id'] %>" selected><%= key['name'] %></option>
                <% else %>
                  <option value="<%= key['id'] %>"><%= key['name'] %></option>
                <% end %>
              <% end %>          
              </select>
            </div>
            <div>
              <label for="ingredient_amount_<%= i %>" class="l_amount">使用量: </label>
              <input type="number" name="ingredient_amount_<%= i %>" id="ingredient_amount_<%= i %>" value="<%= h(ingredient['amount']) %>" style="width: 130px;" class="t_amount" onChange="getCost(this.id)" step="0.1">
            </div>
            <div class="mt-3">
              <span class="sp_unit_<%= i %>" id="ingredient_unit_<%= i %>">
              <% @s_unit.each do |key, value| %>
                <% if value == ingredient['unit_used'] %>
                  (<%= key %>)
                <% end %>
              <% end %>
              </span>
            </div>            
            <div>
              <label>原価: </label>
              <input type="number" name="ingredient_cost_used_<%= i %>" id="ingredient_cost_used_<%= i %>" value="<%= h(ingredient['cost_used']) %>" style="width: 130px;" class="t_cost" readonly step="0.1">
              <span>円</span>
            </div>
            <input type="button" value="−" class="r_btn btn btn-red" id="remove_btn_<%= i %>" style="width: 30px;">
          </div>
        </div>
      <% end %>
    </div>    
    <div><input type="button" value="＋" class="btn btn-blue" onClick="addInput()"></div>
    <div><input type="submit" value="登録"  class="btn btn-green btn-right mt-1" onClick="return checkForm()"></div>
  </form>
</div>

<script>
  // 仕入れ先に応じた食材名を取得する関数
  function getName(trader, index) {    
    var idx = index.split('_');
    $('#ingredient_name_' + idx[2]).html('');
    $('#ingredient_name_' + idx[2]).prop('disabled', false);
    $.ajax({
      async: false,
      url: '/sp_getingredient_name/' + trader,
      type: "POST",
      data: {csrf_token: "<%= @csrf_token %>"},
      dataType: "json",      
    }).done(function(data) {        
        $('#ingredient_name_' + idx[2]).append($('<option>').html('選択してください').val('').attr({disabled: true, selected: true}));
        for(let i=0; i < data.length; i++) {
          $('#ingredient_name_' + idx[2]).append($('<option>').html(data[i].name).val(data[i].id));
        }
    });
  }

  // 食材の使用単位を取得する関数
  function getUnit(id, index) {
    var idx = index.split('_');    
    $.ajax({
      async: false,
      url: '/sp_getingredient_unit/' + id,
      type: "POST",
      data: {csrf_token: "<%= @csrf_token %>"},
      dataType: "json",      
    }).done(function(data) {
      var unit = <%= @s_unit.to_json %>
      var value = [];
      for(let i=0; i < data.length; i++) {
        value = Object.keys(unit).reduce(function(r, k) { return unit[k] == data[i].unit_used ? k : r }, null);        
        $('#ingredient_unit_' + idx[2]).html('(' + value + ')');
      }
    });
  }
  
  // 食材の使用量から原価を計算する関数
  function getCost(index) {
    var idx = index.split('_');    
    var ingredient_id = $('#ingredient_name_' + idx[2]).val();
    $.ajax({
      async: false,
      url: '/sp_getingredient_cost/' + ingredient_id,
      type: "POST",
      data: {csrf_token: "<%= @csrf_token %>"},
      dataType: "json",      
    }).done(function(data) {      
      var value = Number($('#ingredient_amount_' + idx[2]).val()) * Number(data[0].cost_used);      
      $('#ingredient_cost_used_' + idx[2]).html(value).val(value);
    });
  }

  // 隠しフォームをクローンして新しいフォームを作成する関数
  var i = <%= @ingredients.length.to_i - 1 %>;
  function addInput() {
    i++;
    $('#i_form').clone(true).appendTo('#append').attr('id', 'i_form' + i).css('display', 'block')
    .find('.l_trader').attr('for', 'ingredient_trader_' + i).end()
    .find('.s_trader').attr('id', 'ingredient_trader_' + i).end()
    .find('.l_name').attr('for', 'ingredient_name_' + i).end()
    .find('.s_name').attr({name: 'ingredient_id_' + i, id: 'ingredient_name_' + i, disabled: true}).html('').end()
    .find('.r_btn').attr('id', 'remove_btn_' + i).end()
    .find('.l_amount').attr('for', 'ingredient_amount_' + i).end()
    .find('.t_amount').attr({name: 'ingredient_amount_' + i, id: 'ingredient_amount_' + i}).end()
    .find('.sp_unit').attr('id', 'ingredient_unit_' + i).end()
    .find('.t_cost').attr({name: 'ingredient_cost_used_' + i, id: 'ingredient_cost_used_' + i});
  }

  // フォームを削除する関数
  function removeInput(index) {
    var idx = index.split('_');
    $('#i_form' + idx[2]).remove();
  }

  // フォームを検証する関数
  function checkForm() {
    $('#r_form').submit(function() {
      var differs = true;
      var name_array = [];
      $('select[id^=ingredient_name]').each(function(){        
        if(!$(this).val()) {
          alert('食材名は必須項目です');
          differs =  false;
          return false;
        }else {
          name_array.push($(this).val());
        }
      });
      console.log(name_array);
      var unique_array = new Set(name_array);
      if(unique_array.size != $('select[id^=ingredient_name]').length) {
        alert('同一の食材は選択できません');
        differs = false;
      }
      return differs;      
    });
  }
</script>